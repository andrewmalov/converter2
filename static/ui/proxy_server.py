#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Ö–æ–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Firewall Migration Tool
"""

import http.server
import socketserver
import urllib.request
import urllib.parse
import json
import os
from urllib.parse import urlparse, parse_qs

class ProxyHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–µ–Ω–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
        if self.path == '/' or self.path == '/index.html':
            self.path = '/index_final.html'
        
        # –î–æ—Å—Ç—É–ø –∫ –≤–µ—Ä—Å–∏–∏ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ /noauth
        elif self.path == '/noauth':
            self.path = '/index_no_auth.html'
        
        # –î–æ—Å—Ç—É–ø –∫ —Ä–∞–±–æ—á–µ–π –≤–µ—Ä—Å–∏–∏ —á–µ—Ä–µ–∑ /working
        elif self.path == '/working':
            self.path = '/working.html'
        
        # –î–æ—Å—Ç—É–ø –∫ –¥–µ–º–æ-—Å—Ç—Ä–∞–Ω–∏—Ü–µ —á–µ—Ä–µ–∑ /demo
        elif self.path == '/demo':
            self.path = '/bypass.html'
        
        # –î–æ—Å—Ç—É–ø –∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é —á–µ—Ä–µ–∑ /original
        elif self.path == '/original':
            self.path = '/index.html'
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ EULA
        elif self.path == '/api/eula_check':
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è EULA
            response = {
                "status": "success",
                "eula_accepted": True,
                "message": "EULA check bypassed"
            }
            self.wfile.write(json.dumps(response).encode())
            return
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö API –∑–∞–ø—Ä–æ—Å–æ–≤ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
        elif self.path.startswith('/api/'):
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            response = {"status": "success", "message": "API call bypassed"}
            self.wfile.write(json.dumps(response).encode())
            return
        
        # –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
        super().do_GET()
    
    def do_POST(self):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ POST –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API
        if self.path.startswith('/api/'):
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            
            # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –ª–æ–≥–∏–Ω–∞
            if self.path == '/api/auth/login':
                response = {
                    "status": "success",
                    "message": "Login successful",
                    "token": "fake-jwt-token-12345",
                    "user": {
                        "username": "admin",
                        "role": "admin",
                        "permissions": ["read", "write", "admin"]
                    },
                    "authenticated": True
                }
            else:
                response = {"status": "success", "message": "API POST bypassed"}
            
            self.wfile.write(json.dumps(response).encode())
            return
        
        super().do_POST()
    
    def do_OPTIONS(self):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ CORS preflight –∑–∞–ø—Ä–æ—Å–æ–≤
        self.send_response(200)
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        self.end_headers()

if __name__ == "__main__":
    PORT = 12001
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å —Ñ–∞–π–ª–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    #os.chdir('/workspace/converter')
    
    with socketserver.TCPServer(("0.0.0.0", PORT), ProxyHandler) as httpd:
        print(f"üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
        print(f"üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: https://work-2-xrvofshduudwgugx.prod-runtime.all-hands.dev")
        print("üîì –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ - –≤—Å–µ API –∑–∞–ø—Ä–æ—Å—ã –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —É—Å–ø–µ—à–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã")
        print("")
        print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã:")
        print("   / –∏–ª–∏ /index.html    - –§–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
        print("   /noauth             - –í–µ—Ä—Å–∏—è –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        print("   /working            - –†–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è")
        print("   /demo               - –î–µ–º–æ-—Å—Ç—Ä–∞–Ω–∏—Ü–∞")
        print("   /original           - –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        print("")
        print("üîß –î–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±—Ö–æ–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞:")
        print("   window.forceOfflineMode()")
        httpd.serve_forever()
